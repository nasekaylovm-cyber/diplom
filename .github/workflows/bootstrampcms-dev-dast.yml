name: DAST - OWASP ZAP Security Pipeline

on:
  push:
    branches: ["nasekaylovm-cyber-patch-1"]
  pull_request:
    branches: ["nasekaylovm-cyber-patch-1"]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP environment
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          extensions: mbstring, pdo_mysql, xml, curl, json, tokenizer

      - name: Install dependencies
        run: |
          composer clear-cache
          composer install --no-dev --no-scripts --no-interaction --ignore-platform-reqs || true

      - name: Deploy to server
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: 5.129.250.92
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            su - bootstrapcms
            cd /var/www/bootstrapcms
            git clone https://github.com/BootstrapCMS/CMS.git .
            git checkout master
            composer install
            php artisan migrate --force
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            npm install
            chmod -R 755 storage bootstrap/cache
            chown -R bootstrapcms:www-data storage bootstrap/cache
            
  security-pipeline:
    needs: [deploy]
    runs-on: ubuntu-latest
    env:
      TARGET_URL: http://5.129.250.92
      REPORT_PATH: ./security-reports

    steps:
      - name: Create rules directory and verify rules file
        run: |
          mkdir -p ./zap_rules
          touch ./zap_rules/rules.conf
          cat ./zap_rules/rules.conf || echo "Rules file is empty"

      - name: Setup Docker environment
        run: |
          docker system prune -f
          docker pull owasp/zap2docker-weekly

      - name: Run ZAP scan with error handling
        id: zap-scan
        uses: zaproxy/action-baseline@v0.7.0
        with:
          target: http://5.129.250.92
          docker_name: owasp/zap2docker-weekly
          cmd_options: '-a -j'
          fail_action: false
          allow_issue_writing: true
          issue_title: 'ZAP Security Scan Report'
          continue-on-error: true

      - name: Collect all logs and errors
        run: |
          echo "Collecting all logs..."
          mkdir -p ${{ env.REPORT_PATH }}/logs
          docker logs $(docker ps -lq) >> ${{ env.REPORT_PATH }}/logs/docker.log 2>&1

      - name: Generate and create GitHub Issue with report
        run: |
          echo "### Security Pipeline Report" > ${{ env.REPORT_PATH }}/security-report.md
          echo "## General Information" >> ${{ env.REPORT_PATH }}/security-report.md
          echo "Target URL: ${{ env.TARGET_URL }}" >> ${{ env.REPORT_PATH }}/security-report.md
          echo "Date: $(date)" >> ${{ env.REPORT_PATH }}/security-report.md
          
          echo "## Pipeline Status" >> ${{ env.REPORT_PATH }}/security-report.md
          if [ "${{ job.status }}" = "success" ]; then
            echo "## Overall Status: Success" >> ${{ env.REPORT_PATH }}/security-report.md
          else
            echo "## Overall Status: Failed" >> ${{ env.REPORT_PATH }}/security-report.md
          fi

      - name: Create GitHub Issue
        uses: actions/github-issues-create@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: ${{ env.ISSUE_TITLE }}
          labels: security,zap-scan
          body: file://${{ env.REPORT_PATH }}/security-report.md
