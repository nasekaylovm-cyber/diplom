deploy:
  name: Deploy with Docker
  runs-on: ubuntu-latest
  needs: build
  if: github.event_name == 'push' && github.ref == 'refs/heads/master'
  
  steps:
  - name: Checkout code
    uses: actions/checkout@v4

  - name: Deploy to server
    uses: appleboy/ssh-action@v1.0.0
    with:
      host: 5.129.250.92
      username: root
      key: ${{ secrets.SSH_PRIVATE_KEY }}
      script: |
        cd /var/www/html
        echo "Pulling latest code..."
        git fetch origin
        git reset --hard origin/master
        
        echo "Checking if Dockerfile exists..."
        ls -la | grep Dockerfile || echo "Dockerfile not found, creating one..."
        
        # Если Dockerfile нет, создаем его
        if [ ! -f Dockerfile ]; then
          cat > Dockerfile << 'EOF'
FROM php:7.4-fpm

RUN apt-get update && apt-get install -y \
    git curl libpng-dev libonig-dev libxml2-dev zip unzip libzip-dev

RUN docker-php-ext-install pdo pdo_mysql mbstring exif pcntl bcmath gd zip

COPY --from=composer:2.0 /usr/bin/composer /usr/bin/composer

WORKDIR /var/www/html
COPY . .
RUN composer install --no-dev --no-interaction --optimize-autoloader
RUN chown -R www-data:www-data storage bootstrap/cache
RUN chmod -R 775 storage bootstrap/cache

EXPOSE 9000
CMD ["php-fpm"]
EOF
        fi
        
        echo "Building Docker image..."
        docker build -t my-app:latest .
        
        echo "Stopping current container..."
        docker stop my-app-container || true
        docker rm my-app-container || true
        
        echo "Starting new container..."
        docker run -d \
          --name my-app-container \
          -p 80:9000 \
          -v /var/www/html/storage:/var/www/html/storage \
          -v /var/www/html/.env:/var/www/html/.env \
          my-app:latest
        
        echo "Deployment completed successfully!"
