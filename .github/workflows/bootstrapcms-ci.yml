name: CI

on:
  push:
    branches: [ "master", "main" ]
  pull_request:
    branches: [ "master", "main" ]
  workflow_dispatch:

jobs:
  setup:
    name: Setup & dependencies
    runs-on: ubuntu-latest
    outputs:
      php-version: ${{ steps.php.outputs.php-version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        id: php
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'   # Laravel 5.1 требует старый PHP; подберите подходящую версию (5.6/7.0/7.1/7.4) в зависимости от ветки
          extensions: mbstring, xml, json, pdo_mysql
          coverage: xdebug

      - name: Get composer cache
        uses: actions/cache@v4
        with:
          path: ~/.composer/cache
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}

      - name: Install composer dependencies
        run: composer install --no-interaction --prefer-dist

  static-analysis:
    name: Static analysis (PHPStan + PHPCS)
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
      - name: Install dev deps
        run: composer install --no-interaction

      - name: Run PHPStan
        uses: php-actions/phpstan@v2
        with:
          phpstan-args: --configuration=phpstan.neon || --level=max

      - name: Run PHPCS (coding standards)
        run: |
          composer require "squizlabs/php_codesniffer" --dev || true
          ./vendor/bin/phpcs --standard=PSR2 --extensions=php app/ || true

  tests:
    name: Run unit tests
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
      - name: Install deps
        run: composer install --no-interaction
      - name: Prepare .env
        run: cp .env.example .env || true
      - name: Run migrations (sqlite in memory recommended)
        run: |
          php artisan key:generate || true
      - name: Run PHPUnit
        run: ./vendor/bin/phpunit --configuration phpunit.xml.dist --testsuite=Feature || true
      - name: Upload coverage (optional)
        if: success()
        uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: false
